name: Start Release

on:
  workflow_dispatch:

jobs:
 build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Build
      run: dotnet build
    - name: Test
      run: dotnet test --no-build --verbosity normal

    # - name: Report Test Results
    #   uses: dorny/test-reporter@v1
    #   if: ${{ always() }}
    #   with:
    #     name: Sample Lib Test Results
    #     path: ./TestResults/*.trx
    #     reporter: dotnet-trx

    - name: Install NuGetKeyVaultSignTool
      run: dotnet tool install --global NuGetKeyVaultSignTool

    - name: Sign NuGet Packages
      working-directory: Artifacts/
      run: |
        NuGetKeyVaultSignTool sign *.nupkg --file-digest sha256 `
          --timestamp-digest sha256 `
          --timestamp-rfc3161 '${{ secrets.CodeSignTimestampUrl }}' `
          --azure-key-vault-url ${{ secrets.CodeSignKeyVault }} `
          --azure-key-vault-client-id ${{ secrets.CodeSignClientId }} `
          --azure-key-vault-tenant-id ${{ secrets.CodeSignTenantId }} `
          --azure-key-vault-client-secret ${{ secrets.CodeSignClientSecret }} `
          --azure-key-vault-certificate ${{ secrets.CodeSignCertificate }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: NuGet
        path: Artifacts/

  release:
    runs-on: ubuntu-latest
    needs: [build]
    name: Release
    outputs:
      version-name: ${{ steps.process-version.outputs.version-name }}
      release-display-name: ${{ steps.process-version.outputs.release-display-name }}
      is-preview: ${{ steps.process-version.outputs.is-preview }}
    steps:
    - uses: actions/checkout@v2
      with:
        clean: true

    - uses: actions/download-artifact@v2
      with:
        name: NuGet
        path: Artifacts/

    - run: perl ../build/process-version.pl SampleLib
      id: process-version
      name: Process Version
      working-directory: Artifacts/

    - uses: ncipollo/release-action@main
      name: Create Release
      with:
        # artifacts: "Artifacts/*.nupkg,Artifacts/*.snupkg"
        # artifactErrorsFailBuild: true
        draft: true
        generateReleaseNotes: true
        name: '${{ steps.process-version.outputs.release-display-name }}'
        prerelease: '${{ steps.process-version.outputs.is-preview }}'
        tag: '${{ steps.process-version.outputs.version-name }}'

    # - uses: dansiegel/action-automatic-releases@master
    #   with:
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     automatic_release_tag: ${{ steps.process-version.outputs.version-name }}
    #     prerelease: ${{ steps.process-version.outputs.is-preview }}
    #     title: ${{ steps.process-version.outputs.release-display-name }}
    #     draft: true
    #     files: |
    #       Artifacts/*.nupkg
    #       Artifacts/*.snupkg